 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.infogroup.mini.api</groupId>
	<artifactId>mini</artifactId>
	<packaging>war</packaging>
	<version>2.1.0</version>
	<name>Infoconnect Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
        <timestamp>${maven.build.timestamp}</timestamp>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<miniframework.version>2.1.0</miniframework.version>
		<resteasy.version>2.3.5.Final</resteasy.version>
		<spring.version>3.2.1.RELEASE</spring.version>
		<logback.version>1.0.9</logback.version>
		<httpclient.version>4.3.1</httpclient.version>
		<sl4j.version>1.7.2</sl4j.version>
		<opencsv.version>2.0</opencsv.version>
		<commonslang3.version>3.0</commonslang3.version>
		<commons.configuration.version>1.9</commons.configuration.version>
		<couchbase.client.version>1.3.2</couchbase.client.version>
        <springdata.commons>1.5.0.RELEASE</springdata.commons>
        <spring-dao.version>2.0.8</spring-dao.version>
        <joda-time.version>2.1</joda-time.version>
        <spring-data-commons-core.version>1.4.1.RELEASE</spring-data-commons-core.version>
        <servlet.version>2.5</servlet.version>
        <jmemcached-cli.version>1.0.0</jmemcached-cli.version>

        <!-- QA versions -->
        
        <testNG.version>6.8.5</testNG.version>
        <!-- <junit.version>4.10</junit.version> -->
        <mockito.version>1.9.5</mockito.version>
        <jacoco.version>0.6.3.201306030806</jacoco.version>
        <wiremock.version>1.34</wiremock.version>

        <!-- plugin versions -->

        <maven.dependency.plugin.version>2.2</maven.dependency.plugin.version>
        <maven.surefire.plugin.version>2.8</maven.surefire.plugin.version>
        <maven.failsafe.plugin.version>2.8</maven.failsafe.plugin.version>
        <maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
        <maven.surefire.report.plugin>2.13</maven.surefire.report.plugin>
        <cargo.maven2.plugin.version>1.3.2</cargo.maven2.plugin.version>

        <cargo.servlet.port>8080</cargo.servlet.port>
        <cargo.tomcat.url>http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.35/bin/apache-tomcat-7.0.35.zip</cargo.tomcat.url>
        <cargo.delete.config>${basedir}/target/cargo/configurations/tomcat7x/webapps</cargo.delete.config>
        <cargo.delete.installs>${basedir}/target/cargo/installs/apache-tomcat-7.0.35/apache-tomcat-7.0.35/webapps</cargo.delete.installs>
        <cargo.delete.config.host-manager>${cargo.delete.config}/host-manager</cargo.delete.config.host-manager>
        <cargo.delete.config.manager>${cargo.delete.config}/manager</cargo.delete.config.manager>
        <cargo.delete.installs.docs>${cargo.delete.installs}/docs</cargo.delete.installs.docs>
        <cargo.delete.installs.examples>${cargo.delete.installs}/examples</cargo.delete.installs.examples>
        <cargo.delete.installs.host-manager>${cargo.delete.installs}/host-manager</cargo.delete.installs.host-manager>
        <cargo.delete.installs.manager>${cargo.delete.installs}/manager</cargo.delete.installs.manager>
        <cargo.delete.installs.ROOT>${cargo.delete.installs}/ROOT</cargo.delete.installs.ROOT>
        
	</properties>
	<repositories>
		<repository>
			<id>local-wiremock</id>
			<name>Local WireMock</name>
			<url>file://${project.baseUri}/repo</url>
		</repository>
		<repository>
			<id>jboss</id>
			<name>jboss repo</name>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>
		<repository>
			<id>repo</id>
			<releases>
				<enabled>true</enabled>
				<checksumPolicy>ignore</checksumPolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>file://${basedir}/repo</url>
		</repository>
	</repositories>
	<dependencies>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1</version>
        </dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commonslang3.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>${opencsv.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>${commons.configuration.version}</version>
		</dependency>
		<dependency>
            <groupId>com.couchbase.client</groupId>
			<artifactId>couchbase-client</artifactId>
			<version>${couchbase.client.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>jettison</artifactId>
					<groupId>org.codehaus.jettison</groupId>
				</exclusion>
				<exclusion>
					<artifactId>httpcore</artifactId>
					<groupId>org.apache.httpcomponents</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${sl4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>jaxrs-api</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>${resteasy.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-codec</artifactId>
					<groupId>commons-codec</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-spring</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
			<version>${resteasy.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>stax-api</artifactId>
					<groupId>javax.xml.stream</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>${joda-time.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons-core</artifactId>
			<version>${spring-data-commons-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-dao</artifactId>
			<version>${spring-dao.version}</version>
		</dependency>
		<dependency>
			<groupId>com.infogroup.mini.framework</groupId>
			<artifactId>com-infogroup-mini-framework</artifactId>
			<version>${miniframework.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-log4j12</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jsp-2.1</artifactId>
					<groupId>org.mortbay.jetty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jsp-api-2.1</artifactId>
					<groupId>org.mortbay.jetty</groupId>
				</exclusion>
				<exclusion>
					<artifactId>servlet-api-2.5</artifactId>
					<groupId>org.mortbay.jetty</groupId>
				</exclusion>
			</exclusions>
		</dependency>
        <dependency>
            <groupId>com.thimbleware.jmemcached</groupId>
            <artifactId>jmemcached-cli</artifactId>
            <version>${jmemcached-cli.version}</version>
        </dependency>
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>servlet-api</artifactId>
		    <version>${servlet.version}</version>
            <scope>provided</scope>
		</dependency>

        <!-- QA Dependencies -->
        
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>${wiremock.version}</version>
            <classifier>standalone</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>servlet-api</artifactId>
                    <groupId>org.mortbay.jetty</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <type>maven-plugin</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
       <!--  <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency> -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testNG.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.infogroup.mini.framework</groupId>
            <artifactId>com-infogroup-mini-framework</artifactId>
            <version>${miniframework.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
	</dependencies>
	<build>
		<finalName>mini</finalName>
		
		<resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>
            
            
		<pluginManagement>
			<plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven.failsafe.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${cargo.maven2.plugin.version}</version>
					<configuration>
						<configuration>
							<properties>
								<cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
								<cargo.jvmargs>
									-Xdebug
									-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
									-Xnoagent
									-Djava.compiler=NONE
								</cargo.jvmargs>
							</properties>
						</configuration>
						<deployables>
							<!-- The project's artifact is automatically deployed if no deployable 
								is defined. However, we define it here so that we can specify the context 
								(we don't want the version to be included in the context). -->
							<deployable>
								<groupId>${project.groupId}</groupId>
								<artifactId>${project.artifactId}</artifactId>
								<type>war</type>
								<properties>
									<context>${project.artifactId}</context>
								</properties>
							</deployable>
						</deployables>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<inherited>true</inherited>
				<configuration>
					<skip>false</skip>
				</configuration>
				<executions>
					<execution>
						<id>surefire-it</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<configuration>
							<target>
								<delete dir="${cargo.delete.config.host-manager}" />
								<delete dir="${cargo.delete.config.manager}" />
								<delete dir="${cargo.delete.installs.docs}" />
								<delete dir="${cargo.delete.installs.examples}" />
								<delete dir="${cargo.delete.installs.host-manager}" />
								<delete dir="${cargo.delete.installs.manager}" />
								<delete dir="${cargo.delete.installs.ROOT}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
 					<execution> 
						<id>prepare-agent</id>
						<goals> 
 							<goal>prepare-agent</goal>
 						</goals> 
 					</execution> 
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.20</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>surefire-report-maven-plugin</artifactId>
				<version>{$maven.surefire.report.plugin}</version>
				<inherited>true</inherited>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>tomcat7x</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.cargo</groupId>
							<artifactId>cargo-maven2-plugin</artifactId>
							<configuration>
								<container>
									<containerId>tomcat7x</containerId>
									<zipUrlInstaller>
										<url>${cargo.tomcat.url}</url>
									</zipUrlInstaller>
								</container>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>
